query login($phoneNumber: String!, $pin: String!, $flavour: Flavour!) {
  login(flavour: $flavour, phoneNumber: $phoneNumber, pin: $pin) {
   code
    message
    credentials {
      expiresIn
      idToken
      refreshToken
    }
    clientProfile {
      active
      addresses {
        active
        addressType
        country
        county
        postalCode
        text
      }
      clientCounselled
      clientType
      facilityID
      relatedPersons {
        active
        dateOfBirth
        firstName
        gender
        lastName
        otherName
        relatedTo
        relationshipType
      }
      treatmentBuddy
      treatmentEnrollmentDate
      user {
        active
        displayName
        firstName
        gender
        languages
        suspended
        avatar
        contacts {
          active
          contact
          contactType
          optedIn
        }
        lastName
        middleName
        pinChangeRequired
        termsAccepted
        userID
        userName
        userType
      }
    }
  }
}

{
  "phoneNumber": "+254717356476",
  "pin": "0000",
  "flavour": "CONSUMER"
}

query sendOTP( $userID: String!, $phoneNumber: String!, $flavour: Flavour!) {
  sendOTP(userID: $userID, phoneNumber: $phoneNumber, flavour: $flavour)
}

{
  "userID": "some-user-id",
  "phoneNumber": "+254717356476",
  "flavour": "CONSUMER"
}

query resendOTP( $userID: String!, $phoneNumber: String!, $flavour: Flavour!) {
  resendOTP(userID: $userID, phoneNumber: $phoneNumber, flavour: $flavour)
}

{
  "userID": "some-user-id",
  "phoneNumber": "+254717356476",
  "flavour": "CONSUMER"
}

query verifyOTP($userID: String!, $otp: String!, $flavour: Flavour!) {
  verifyOTP(userID: $userID, otp: $otp, flavour: $flavour) {
    code
    response
  }
}


{
  "userID": "some-user-id",
  "flavour": "CONSUMER",
  "otp": "1234"
}

query getSecurityQuestions($flavour: Flavour!) {
  getSecurityQuestions(flavour: $flavour) {
    securityQuestionID
    active
    description
    flavour
    questionStem
    responseType
  }
}

{
  "flavour": "CONSUMER"
}

query getCurrentTerms {
  getCurrentTerms {
    termsID
    text
  }
}

// No variables needed


query fetchRecentContent {
  fetchRecentContent {
    author
    authorAvatar
    body
    contentID
    contentType
    createdAt
    estimate
    heroImage
    isNew
    publicLink
    tags
    title
  }
}

# No variables for this one

query fetchContent($limit: Int!, $tags: [String!]! ) {
  fetchContent(limit: $limit, tags: $tags) {
    author
    authorAvatar
    body
    contentID
    contentType
    createdAt
    estimate
    heroImage
    isNew
    publicLink
    tags
    title
  }
}

{
  "limit": 10,
  "tags": ["health", "fitness"]
}

query fetchSuggestedGroups {
  fetchSuggestedGroups {
    avatar
    members
    name
  }
}

# No variables for this one

